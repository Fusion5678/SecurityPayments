name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'

env:
  NODE_VERSION: '18'

jobs:
  # Frontend Tests and Build
  test-and-build:
    name: Test and Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: payments-frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd payments-frontend
        npm ci
        
    - name: Run linting
      run: |
        cd payments-frontend
        npm run lint
        
    - name: Build React Frontend
      env:
        NODE_ENV: production
      run: |
        cd payments-frontend
        npm run build
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Copy Frontend to API wwwroot
      run: |
        mkdir -p PaymentsAPI/wwwroot
        cp -r payments-frontend/dist/* PaymentsAPI/wwwroot/
        
    - name: Build .NET API (with frontend included)
      run: |
        cd PaymentsAPI
        dotnet publish --configuration Release --output ../publish/combined
        
    - name: Upload combined artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: payments-frontend/dist/

  # Deploy to Production
  deploy-prod:
    name: Deploy Frontend to Production
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-artifacts
        path: ./publish/frontend/
        
    - name: Deploy to Azure App Service (Production)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_APP_NAME_FRONTEND_PROD }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND_PROD }}
        package: ./publish/frontend/
