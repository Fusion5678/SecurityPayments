name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ master, dev ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ master, dev ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'

permissions:
  contents: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '20'
  AZURE_APP_NAME_FRONTEND: 'ST10500143-Payments-Portal'
  VITE_API_BASE_URL: 'https://st10500143-payments.azurewebsites.net/api'

jobs:
  # Frontend Tests and Build
  test-and-build:
    name: Test and Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Security - Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: payments-frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd payments-frontend
        npm ci
        
    - name: Run linting
      run: |
        cd payments-frontend
        npm run lint
        
    - name: Security - Dependency Vulnerability Scan
      run: |
        cd payments-frontend
        npm audit --audit-level=moderate
        
    - name: Security - Check for known vulnerabilities
      run: |
        cd payments-frontend
        npx audit-ci --moderate
        
    - name: Build frontend
      env:
        NODE_ENV: production
      run: |
        cd payments-frontend
        npm run build
        
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: payments-frontend/dist/

  # Deploy to Production (both master and dev branches)
  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set build environment variables
      run: |
        echo "VITE_API_BASE_URL=${{ env.VITE_API_BASE_URL }}" >> $GITHUB_ENV
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          echo "VITE_APP_NAME=SecurityPayments Portal" >> $GITHUB_ENV
          echo "VITE_ENVIRONMENT=production" >> $GITHUB_ENV
        else
          echo "VITE_APP_NAME=SecurityPayments Portal (Dev)" >> $GITHUB_ENV
          echo "VITE_ENVIRONMENT=development" >> $GITHUB_ENV
        fi
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: payments-frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd payments-frontend
        npm ci
        
    - name: Build frontend
      env:
        VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}
        NODE_ENV: production
      run: |
        cd payments-frontend
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          VITE_APP_NAME="SecurityPayments Portal" VITE_ENVIRONMENT="production" npm run build
        else
          VITE_APP_NAME="SecurityPayments Portal (Dev)" VITE_ENVIRONMENT="development" npm run build
        fi
        
    - name: Copy Node.js server files to dist
      run: |
        cp payments-frontend/public/package.json payments-frontend/dist/package.json
        cp payments-frontend/public/server.js payments-frontend/dist/server.js
        
    - name: Install production dependencies in dist
      run: |
        cd payments-frontend/dist
        npm install --production --no-package-lock
        
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }}
        package: payments-frontend/dist/
        clean: true
        
    - name: Notify Deployment Success
      if: success()
      run: |
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          echo "‚úÖ SecurityPayments Frontend successfully deployed to production!"
        else
          echo "‚úÖ SecurityPayments Frontend successfully deployed from dev branch!"
        fi
        echo "üåê Frontend URL: https://st10500143-payments-portal.azurewebsites.net"
        echo "üîó API Backend: ${{ env.VITE_API_BASE_URL }}"
        echo "üì¶ Deployed from branch: ${{ github.ref_name }}"
        
    - name: Notify Deployment Failure
      if: failure()
      run: |
        echo "‚ùå Frontend deployment failed!"
        echo "Please check the deployment logs and Azure configuration."
