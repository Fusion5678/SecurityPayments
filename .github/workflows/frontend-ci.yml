name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ master, dev ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ master, dev ]
    paths:
      - 'payments-frontend/**'
      - '.github/workflows/frontend-ci.yml'

env:
  NODE_VERSION: '20'

jobs:
  # Frontend Tests and Build
  test-and-build:
    name: Test and Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: payments-frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd payments-frontend
        npm ci
        
    - name: Run linting
      run: |
        cd payments-frontend
        npm run lint
        
    - name: Build frontend
      env:
        NODE_ENV: production
      run: |
        cd payments-frontend
        npm run build
        
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: payments-frontend/dist/

  # Deploy to Production
  deploy-prod:
    name: Deploy Frontend to Production
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Load environment variables
      run: |
        cd payments-frontend
        # Load variables from .env.production
        while IFS='=' read -r key value; do
          if [[ $key != \#* ]] && [[ -n $key ]]; then
            echo "$key=$value" >> $GITHUB_ENV
          fi
        done < .env.production
        
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-artifacts
        path: ./publish/frontend/
        
    - name: Deploy to Azure App Service (Production)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_APP_NAME_FRONTEND_PROD }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND_PROD }}
        package: ./publish/frontend/
